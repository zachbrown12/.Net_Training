/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
import { of, empty, timer } from 'rxjs';
import { expand, skip } from 'rxjs/operators';
import { MINUTE, HOUR, DAY } from './util';
/**
 * @abstract
 */
export class TimeagoClock {
}
function TimeagoClock_tsickle_Closure_declarations() {
    /**
     * @abstract
     * @param {?} then
     * @return {?}
     */
    TimeagoClock.prototype.tick = function (then) { };
}
export class TimeagoDefaultClock extends TimeagoClock {
    /**
     * @param {?} then
     * @return {?}
     */
    tick(then) {
        return of(0)
            .pipe(expand(() => {
            const /** @type {?} */ now = Date.now();
            const /** @type {?} */ seconds = Math.round(Math.abs(now - then) / 1000);
            const /** @type {?} */ period = seconds < MINUTE
                ? 1000
                : seconds < HOUR
                    ? 1000 * MINUTE
                    : seconds < DAY
                        ? 1000 * HOUR
                        : 0;
            return period ? timer(period) : empty();
        }), skip(1));
    }
}
TimeagoDefaultClock.decorators = [
    { type: Injectable },
];

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZWFnby5jbG9jay5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC10aW1lYWdvLyIsInNvdXJjZXMiOlsidGltZWFnby5jbG9jay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQWMsRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDcEQsT0FBTyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsTUFBTSxRQUFRLENBQUM7Ozs7QUFFM0MsTUFBTTtDQUVMOzs7Ozs7Ozs7QUFHRCxNQUFNLDBCQUEyQixTQUFRLFlBQVk7Ozs7O0lBQ25ELElBQUksQ0FBQyxJQUFZO1FBQ2YsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDVCxJQUFJLENBQ0gsTUFBTSxDQUFDLEdBQUcsRUFBRTtZQUNWLHVCQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDdkIsdUJBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7WUFFeEQsdUJBQU0sTUFBTSxHQUNWLE9BQU8sR0FBRyxNQUFNO2dCQUNkLENBQUMsQ0FBQyxJQUFJO2dCQUNOLENBQUMsQ0FBQyxPQUFPLEdBQUcsSUFBSTtvQkFDZCxDQUFDLENBQUMsSUFBSSxHQUFHLE1BQU07b0JBQ2YsQ0FBQyxDQUFDLE9BQU8sR0FBRyxHQUFHO3dCQUNiLENBQUMsQ0FBQyxJQUFJLEdBQUcsSUFBSTt3QkFDYixDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRVosTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztTQUN6QyxDQUFDLEVBQ0YsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUNSLENBQUM7S0FDTDs7O1lBdEJGLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiwgZW1wdHksIHRpbWVyIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBleHBhbmQsIHNraXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBNSU5VVEUsIEhPVVIsIERBWSB9IGZyb20gJy4vdXRpbCc7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBUaW1lYWdvQ2xvY2sge1xuICBhYnN0cmFjdCB0aWNrKHRoZW46IG51bWJlcik6IE9ic2VydmFibGU8YW55Pjtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRpbWVhZ29EZWZhdWx0Q2xvY2sgZXh0ZW5kcyBUaW1lYWdvQ2xvY2sge1xuICB0aWNrKHRoZW46IG51bWJlcik6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIG9mKDApXG4gICAgICAucGlwZShcbiAgICAgICAgZXhwYW5kKCgpID0+IHtcbiAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICAgICAgICAgIGNvbnN0IHNlY29uZHMgPSBNYXRoLnJvdW5kKE1hdGguYWJzKG5vdyAtIHRoZW4pIC8gMTAwMCk7XG5cbiAgICAgICAgICBjb25zdCBwZXJpb2QgPVxuICAgICAgICAgICAgc2Vjb25kcyA8IE1JTlVURVxuICAgICAgICAgICAgICA/IDEwMDBcbiAgICAgICAgICAgICAgOiBzZWNvbmRzIDwgSE9VUlxuICAgICAgICAgICAgICAgID8gMTAwMCAqIE1JTlVURVxuICAgICAgICAgICAgICAgIDogc2Vjb25kcyA8IERBWVxuICAgICAgICAgICAgICAgICAgPyAxMDAwICogSE9VUlxuICAgICAgICAgICAgICAgICAgOiAwO1xuXG4gICAgICAgICAgcmV0dXJuIHBlcmlvZCA/IHRpbWVyKHBlcmlvZCkgOiBlbXB0eSgpO1xuICAgICAgICB9KSxcbiAgICAgICAgc2tpcCgxKVxuICAgICAgKTtcbiAgfVxufVxuIl19